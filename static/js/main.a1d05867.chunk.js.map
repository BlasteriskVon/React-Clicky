{"version":3,"sources":["components/PictureArray.js","components/Pictures.js","App.js","index.js"],"names":["PictureArray","props","className","pictures","map","image","onClick","clickedImage","alt","src","source","imageid","id","style","width","height","Pictures","state","selectedPictures","score","topScore","target","attributes","getNamedItem","value","includes","setState","shufflePictures","newSelectedPictures","concat","newScore","Math","max","picArray","i","push","this","array","j","x","length","floor","random","Component","App","ReactDOM","render","document","getElementById"],"mappings":"qNAceA,MAZf,SAAsBC,GAClB,OACI,yBAAKC,UAAU,OACdD,EAAME,SAASC,IAAI,SAAAC,GAAK,OACrB,yBAAKH,UAAU,YACX,yBAAKI,QAASL,EAAMM,aAAcC,IAAI,aAAaC,IAAKJ,EAAMK,OAAQR,UAAU,YAAYS,QAASN,EAAMO,GAAIC,MAAO,CAACC,MAAM,OAAQC,OAAO,eC+D7IC,E,2MAlEXC,MAAQ,CACJd,SAAU,GACVe,iBAAkB,GAClBC,MAAO,EACPC,SAAU,G,EA2Bdb,aAAe,SAAAF,GACX,IAAMM,EAAUN,EAAMgB,OAAOC,WAAWC,aAAa,WAAWC,MAChE,GAAI,EAAKP,MAAMC,iBAAiBO,SAASd,GAUrC,EAAKe,SAAS,CACVvB,SAAU,EAAKwB,gBAAgB,EAAKV,MAAMd,UAC1Ce,iBAAkB,GAClBC,MAAO,QAbmC,CAC9C,IAAIS,EAAsB,EAAKX,MAAMC,iBAAiBW,OAAO,CAAClB,IAC1DmB,EAAW,EAAKb,MAAME,MAAQ,EAClC,EAAKO,SAAS,CACVvB,SAAU,EAAKwB,gBAAgB,EAAKV,MAAMd,UAC1Ce,iBAAkBU,EAClBT,MAAOW,EACPV,SAAUW,KAAKC,IAAI,EAAKf,MAAMG,SAAUU,O,mFA/BhD,IADA,IAAIG,EAAW,GACPC,EAAI,EAAEA,GAAK,EAAEA,IACjBD,EAASE,KAAK,CACVvB,GAAIsB,EACJxB,OAAQ,UAAYwB,EAAI,SAGhCE,KAAKV,SAAS,CACVvB,SAAU8B,M,sCAIFI,GACZ,IAAIC,EAAGC,EAAGL,EACV,IAAIA,EAAIG,EAAMG,OAAO,EAAEN,EAAI,EAAEA,IACzBI,EAAIP,KAAKU,MAAMV,KAAKW,UAAYR,EAAE,IAClCK,EAAIF,EAAMH,GACVG,EAAMH,GAAKG,EAAMC,GACjBD,EAAMC,GAAKC,EAEf,OAAOF,I,+BAuBP,OACI,yBAAKnC,UAAU,aACX,yBAAKA,UAAU,8BACX,uBAAGA,UAAU,eAAb,UAAmCkC,KAAKnB,MAAME,MAA9C,iBAAmEiB,KAAKnB,MAAMG,WAElF,kBAAC,EAAD,CACAjB,SAAUiC,KAAKnB,MAAMd,SACrBI,aAAc6B,KAAK7B,oB,GA3DZoC,aCIRC,MAJf,WACI,OAAO,kBAAC,EAAD,OCAXC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.a1d05867.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction PictureArray(props) {\r\n    return (\r\n        <div className=\"row\">\r\n        {props.pictures.map(image => (\r\n            <div className=\"col-md-2\">\r\n                <img onClick={props.clickedImage} alt=\"pokemonPic\" src={image.source} className=\"img-fluid\" imageid={image.id} style={{width:\"100%\", height:\"auto\"}}/>\r\n            </div>\r\n        ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PictureArray;","import React, { Component } from \"react\";\r\nimport PictureArray from \"./PictureArray\";\r\n\r\nclass Pictures extends Component {\r\n    state = {\r\n        pictures: [],\r\n        selectedPictures: [],\r\n        score: 0,\r\n        topScore: 0\r\n    };\r\n\r\n    componentDidMount() {\r\n        let picArray = []\r\n        for(var i = 1;i <= 9;i++){\r\n            picArray.push({\r\n                id: i,\r\n                source: \"images/\" + i + \".jpg\"\r\n            });\r\n        }; \r\n        this.setState({\r\n            pictures: picArray\r\n        })\r\n    }\r\n\r\n    shufflePictures(array) {\r\n        var j, x, i;\r\n        for(i = array.length-1;i > 0;i--){\r\n            j = Math.floor(Math.random() * (i+1));\r\n            x = array[i];\r\n            array[i] = array[j];\r\n            array[j] = x;\r\n        }\r\n        return array;\r\n    }\r\n\r\n    clickedImage = image => {\r\n        const imageid = image.target.attributes.getNamedItem(\"imageid\").value;\r\n        if(!this.state.selectedPictures.includes(imageid)){\r\n            let newSelectedPictures = this.state.selectedPictures.concat([imageid]);\r\n            let newScore = this.state.score + 1;\r\n            this.setState({\r\n                pictures: this.shufflePictures(this.state.pictures),\r\n                selectedPictures: newSelectedPictures,\r\n                score: newScore,\r\n                topScore: Math.max(this.state.topScore, newScore)\r\n            });\r\n        } else {\r\n            this.setState({\r\n                pictures: this.shufflePictures(this.state.pictures),\r\n                selectedPictures: [],\r\n                score: 0\r\n            });\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <nav className=\"navbar navbar-dark bg-dark\">\r\n                    <p className=\"navbar-text\">Score: {this.state.score} | Top Score: {this.state.topScore}</p>\r\n                </nav>\r\n                <PictureArray \r\n                pictures={this.state.pictures} \r\n                clickedImage={this.clickedImage}\r\n                />\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Pictures;","import React from \"react\";\r\nimport Pictures from \"./components/Pictures\";\r\n\r\nfunction App() {\r\n    return <Pictures />;\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}